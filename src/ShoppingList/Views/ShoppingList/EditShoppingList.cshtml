@model ShoppingList.ViewModels.EditShoppingListViewModel
@using System.Linq
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Edit Shopping List";
}


<script type="text/javascript">

    var previousItems = @Html.Raw(JsonConvert.SerializeObject(this.Model.PreviousItems.ToArray()));
    var previousStores = @Html.Raw(JsonConvert.SerializeObject(this.Model.PreviousStores.ToArray()));


    function SelectedGroup() {
        return document.getElementById('selectedGroup');
    }

    function Click(itemName) {
        var item = document.getElementById(itemName);
        if (SelectedGroup().contains(item)) {
            SelectedGroup().removeChild(item);

            var parameters = "shoppingListId=@Model.ShopplingListId" + "&itemName=" + itemName;
            var postUrl = "@Url.Action("Remove", "ShoppingList")?" + parameters;
            $.post(postUrl);
        }
    }

    function ViewLists() {
        var destination = "@Url.Action("ViewShoppingLists", "ShoppingList")";
        window.location.href = destination;
    }

    function GoShopping() {        
        var destination = "@Url.Action("GoShopping", "ShoppingList")?id=" + "@Model.ShopplingListId.ToString()";
        window.location.href = destination;
    }


    function CreateItem() {
        var textField = document.getElementById('NewItemField');
        var itemName = textField.value;
        textField.value = null;
        if (itemName == null || itemName == "")
            return;

        itemName = itemName.toLowerCase();

        var existingField = document.getElementById(itemName);
        if (existingField != null) {
            return;
        }

        // create new element
        @*Template: <a id="@item" onclick="Click('@item'); return false;" href="#" class="list-group-item">@item</a>*@
        var element = document.createElement('a');
        element.textContent = itemName;
        element.setAttribute('class', 'list-group-item');
        element.setAttribute('onclick', 'Click("' + itemName + '"); return false;');
        element.setAttribute('href', '#');
        element.setAttribute('id', itemName);

        SelectedGroup().appendChild(element);

        var parameters = "shoppingListId=@Model.ShopplingListId" + "&itemName=" + itemName;
        var postUrl = "@Url.Action("Add", "ShoppingList")?" + parameters;
        $.post(postUrl);

        textField.focus();
    }

    function SelectStore(storeName) {
        document.getElementById('StoreSelection').value = storeName;
        var parameters = "shoppingListId=@Model.ShopplingListId" + "&storeName=" + storeName;
        var postUrl = "@Url.Action("SelectStore", "ShoppingList")?" + parameters;
        $.post(postUrl);
    }


    var itemSearchEngine = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.whitespace,
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        local: previousItems
    });


    var storeSearchEngine = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.whitespace,
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        local: previousStores
    });


    $(document).ready(function() {

        // jQuery methods go here...
        $('#NewItemField').typeahead({
            hint: false,
            highlight: true,
            minLength: 1
        }, {
            name: 'newItems',
            source: itemSearchEngine
        });


        $('#StoreSelection').typeahead({
            hint: false,
            highlight: true,
            minLength: 1
        }, {
            name: 'newStores',
            source: storeSearchEngine
        });

    });


</script>



<h2><span class="label label-default">Edit List</span></h2>


<div class="container">
    <div>
        <button type="button" class="btn btn-default" onclick="GoShopping()">Go Shop</button>
    </div>

    <div class="row">
        <div class='col-xs-12'>
            <h3>Store</h3>
            <span id="SelectStoreWarning" class="label label-danger"></span>
            <div class="input-group">
                <input type="text" class="form-control" id="StoreSelection" onchange="SelectStore(this.value)" value="@Model.SelectedStore">
                <div class="input-group-btn">
                    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"><span class="caret"></span></button>
                    <ul id="color-dropdown-menu" class="dropdown-menu dropdown-menu-right" role="menu">
                        @foreach (var store in Model.PreviousStores) {
                            <li style="text-align: right;" onclick="SelectStore('@store'); return false;"><a href="#">@store</a></li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class='col-xs-12'>
            <h3>Add Item</h3>
            <div class="input-group">
                <input id="NewItemField" type="text" class="form-control" placeholder="chocolate..."
                       onkeydown="if (event.keyCode == 13) CreateItem();"/>
                <span class="input-group-btn">
                    <button class="btn btn-default" type="button" onclick="CreateItem()">Add</button>
                </span>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-xs-12">
            <div class="list-group" id="selectedGroup">
                <H3>To Buy</H3>
                @foreach (var item in Model.SelectedItems)
                {
                    <a id="@item" onclick="Click('@item'); return false;" href="#" class="list-group-item">@item</a>
                }
            </div>
        </div>
    </div>


</div>



