@model ShoppingList.ViewModels.EditShoppingListViewModel
@using System.Linq
@using Microsoft.EntityFrameworkCore.Internal
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Edit Shopping List";
}


<script type="text/javascript">

    document.body.style.backgroundColor = "#FFFCB7";


    var previousItems = @Html.Raw(JsonConvert.SerializeObject(this.Model.PreviousItems.ToArray()));
    var previousStores = @Html.Raw(JsonConvert.SerializeObject(this.Model.PreviousStores.ToArray()));
    var commonItems = @Html.Raw(JsonConvert.SerializeObject(this.Model.CommonItems.ToArray()));

    var recipes = [];

    @foreach (var recipe in Model.Recipes)
    {
        <text>
            recipes[@Html.Raw(JsonConvert.SerializeObject(@recipe.Name))] = @Html.Raw(JsonConvert.SerializeObject(recipe.Items.ToArray()));
        </text>
    }




    function SelectedGroup() {
        return document.getElementById('selectedGroup');
    }

    function Click(itemName) {
        var item = document.getElementById(itemName);
        if (SelectedGroup().contains(item)) {
            SelectedGroup().removeChild(item);

            var parameters = "shoppingListId=@Model.ShopplingListId" + "&itemName=" + itemName;
            var postUrl = "@Url.Action("Remove", "ShoppingList")?" + parameters;
            $.post(postUrl);
        }
    }

    function ViewLists() {
        var destination = "@Url.Action("ViewShoppingLists", "ShoppingList")";
        window.location.href = destination;
    }

    function GoShopping() {
        if (document.getElementById('StoreSelection').value === "<Unknown>") {
            alert("Need to select a store");
            return;
        }

        var destination = "@Url.Action("GoShopping", "ShoppingList")?id=" + "@Model.ShopplingListId.ToString()";
        window.location.href = destination;
    }

    function DeleteList() {
        var r = confirm("Really delete this shopping list?");
        if (r == true) {
            var parameters = "id=@Model.ShopplingListId";
            var postUrl = "@Url.Action("DeleteShoppingList", "ShoppingList")?" + parameters;
            $.post(postUrl, function(data) {
                ViewLists();
            });
        }
    }


    function CreateItem() {
        var textField = document.getElementById('NewItemField');
        var itemName = textField.value;
        if (itemName == null || itemName == "")
            return;

        AddItem(itemName);

        // Clear the value
        textField.value = null;
        $('#NewItemField').typeahead('val', null);

        textField.focus();
    }


    function AddItem(itemName) {
        itemName = itemName.toLowerCase();

        var existingField = document.getElementById(itemName);
        if (existingField != null) {
            return;
        }

        // create new element
        @*Template: <a id="@item" onclick="Click('@item'); return false;" href="#" class="list-group-item">@item</a>*@
        var element = document.createElement('a');
        element.textContent = itemName;
        element.setAttribute('class', 'list-group-item');
        element.setAttribute('onclick', 'Click("' + itemName + '"); return false;');
        element.setAttribute('href', '#');
        element.setAttribute('id', itemName);

        SelectedGroup().appendChild(element);

        var parameters = "shoppingListId=@Model.ShopplingListId" + "&itemName=" + itemName;
        var postUrl = "@Url.Action("Add", "ShoppingList")?" + parameters;
        $.post(postUrl);

    }

    function AddRecipe(recipeName) {

        var recipe = recipes[recipeName];
        for (var i = 0; i < recipe.length; i++) {
            var item = recipe[i];
            AddItem(item);
        }
    }

    function SelectStore(storeName) {
        document.getElementById('StoreSelection').value = storeName;
        var parameters = "shoppingListId=@Model.ShopplingListId" + "&storeName=" + storeName;
        var postUrl = "@Url.Action("SelectStore", "ShoppingList")?" + parameters;
        $.post(postUrl, GoShopping() );
        
    }

    function AddCommonItems() {
        var index;
        for (index = 0; index < commonItems.length; ++index) {
            AddItem(commonItems[index]);
        }
    }


    var itemSearchEngine = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.whitespace,
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        local: previousItems
    });


    var storeSearchEngine = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.whitespace,
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        local: previousStores
    });


    $(document).ready(function() {

        // jQuery methods go here...
        $('#NewItemField').typeahead({
            hint: false,
            highlight: true,
            minLength: 1
        }, {
            name: 'newItems',
            source: itemSearchEngine
        });


        $('#StoreSelection').typeahead({
            hint: false,
            highlight: true,
            minLength: 1
        }, {
            name: 'newStores',
            source: storeSearchEngine
            });        
    });



</script>


<h2><span class="label label-default">Edit List</span></h2>




    <div class="container">
        <div>
            <button type="button" class="btn btn-default" onclick="GoShopping()">Go Shop</button>
            <button type="button" class="btn btn-default" onclick="window.location.reload(true);">Refresh</button>
        </div>

        <div class="row">
            <div class='col-xs-12'>
                <h3>Store</h3>
                <span id="SelectStoreWarning" class="label label-danger"></span>
                <div class="input-group">
                    <input type="text" class="form-control" id="StoreSelection" onchange="SelectStore(this.value)" value="@Model.SelectedStore">
                    <div class="input-group-btn">
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"><span class="caret"></span></button>
                        <ul id="color-dropdown-menu" class="dropdown-menu dropdown-menu-right" role="menu">
                            @foreach (var store in Model.PreviousStores)
                            {
                                <li style="text-align: right;" onclick="SelectStore('@store'); return false;"><a href="#">@store</a></li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class='col-xs-12'>
                <h3>Add Item</h3>
                <div class="input-group">
                    <input id="NewItemField" type="text" class="form-control" placeholder="chocolate..."
                           onkeydown="if (event.keyCode == 13) CreateItem();" />
                    <span class="input-group-btn">
                        <button class="btn btn-default" type="button" onclick="CreateItem()">Add</button>
                    </span>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-xs-12">
                <div class="list-group" id="selectedGroup">
                    <H3>To Buy</H3>
                    @foreach (var item in Model.SelectedItems)
                    {
                        <a id="@item" onclick="Click('@item'); return false;" href="#" class="list-group-item">@item</a>
                    }
                </div>
            </div>
        </div>


    </div>

    <hr style="border-color: gray" />


    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                <div class="list-group" id="recipes">
                    <H3>Recipes</H3>
                    <a id="CommonItems" onclick="AddCommonItems(); return false;" href="#" class="list-group-item">Commons - @Model.CommonItems.Join()</a>
                    &nbsp;
                    @foreach (var item in Model.Recipes)
                    {
                        <a id="@item" onclick="AddRecipe('@item.Name'); return false;" href="#" class="list-group-item">@item.Name</a>
                    }
                </div>
            </div>
        </div>
    </div>

    <hr style="border-color: gray" />

    <div class="container">
        <div>
            <button type="button" class="btn btn-default" onclick="DeleteList()">Delete...</button>
        </div>
    </div>
    