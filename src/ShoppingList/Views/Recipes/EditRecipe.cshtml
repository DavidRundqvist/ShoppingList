@model ShoppingList.ViewModels.EditRecipeViewModel
@using System.Linq
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Edit Recipe";
}

<script>

    var selectedItems = @Html.Raw(JsonConvert.SerializeObject(this.Model.SelectedItems.ToArray()));


    function SelectedGroup() {
        return document.getElementById('selectedGroup');
    }

    function Add() {
        var textField = document.getElementById('NewItemField');
        var itemName = textField.value;
        textField.value = null;
        if (itemName == null || itemName == "")
            return;

        itemName = itemName.toLowerCase();

        var existingField = document.getElementById(itemName);
        if (existingField != null) {
            return;
        }

        // create new element
        @*Template: <a id="@item" onclick="Remove('@item'); return false;" href="#" class="list-group-item">@item</a>*@
        var element = document.createElement('a');
        element.textContent = itemName;
        element.setAttribute('class', 'list-group-item');
        element.setAttribute('onclick', 'Remove("' + itemName + '"); return false;');
        element.setAttribute('href', '#');
        element.setAttribute('id', itemName);
        SelectedGroup().appendChild(element);

        // add to list
        var index = selectedItems.indexOf(itemName);
        if (index < 0) {
            selectedItems.push(itemName);
        }

        textField.focus();
    }

    function Remove(itemName) {
        var item = document.getElementById(itemName);
        if (SelectedGroup().contains(item)) {
            SelectedGroup().removeChild(item);
        }

        var index = selectedItems.indexOf(itemName);
        if (index >= 0) {
            selectedItems.splice(index, 1);
        }

    }


    function Save() {
        var name = document.getElementById('RecipeName').value;
        if (name === "" || name === null) {
            alert("Need to give a recipe name");
            return;
        }

        var jsonObject = {
            "Name" : name,
            "SelectedItems": selectedItems,
            "PreviousItems": @Html.Raw(JsonConvert.SerializeObject(this.Model.PreviousItems.ToArray()))
        };

        $.ajax({
            type: "POST",
            url: '@Url.Action("Save", "Recipes")',
            contentType: 'application/json',
            dataType: "json",
            data: JSON.stringify(jsonObject)
        }).always(function () {
            window.location.href = "@Url.Action("ViewRecipes", "Recipes")";
        });

    }


</script>


<h2><span class="label label-default">Edit Recipe</span></h2>


<div class="container">
    <div>
        <button type="button" class="btn btn-success" onclick="Save()">Save</button>
        <a asp-controller="Recipes" asp-action="ViewRecipes" class="btn btn-danger">Cancel</a>
    </div>



    <div class="row">
        <div class='col-xs-12'>
            <h3>Name</h3>
            <input type="text" class="form-control" id="RecipeName" value="@Model.Name" placeholder="cherry pie...">

            <h3>Add Item</h3>
            <div class="input-group">
                <input id="NewItemField" type="text" class="form-control" placeholder="cherries..."
                       onkeydown="if (event.keyCode == 13) Add();"/>
                <span class="input-group-btn">
                    <button class="btn btn-default" type="button" onclick="Add()">Add</button>
                </span>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-xs-12">
            <div class="list-group" id="selectedGroup">
                <H3>Items</H3>
                @foreach (var item in Model.SelectedItems)
                {
                    <a id="@item" onclick="Remove('@item'); return false;" href="#" class="list-group-item">@item</a>
                }
            </div>
        </div>
    </div>


</div>
